@model Campaign
@{
	ViewData["Title"] = "Tạo chiến dịch đấu giá";
}

<h3 class="border-bottom border-dark p-2 mb-3">Tạo chiến dịch đấu giá</h3>

<form asp-action="Create" method="post" id="ProductForm">
	<div class="row mb-3">
		<label asp-for="CampaignName" class="col-sm-2 col-form-label">Tên chiến dịch</label>
		<div class="col-sm-10">
			<input asp-for="CampaignName" class="form-control" />
			<span asp-validation-for="CampaignName" class="text-danger"></span>
		</div>
	</div>

	<div class="row mb-3">
		<label asp-for="Description" class="col-sm-2 col-form-label">Mô tả</label>
		<div class="col-sm-10">
			<input asp-for="Description" class="form-control" />
		</div>
	</div>

	<div class="row mb-3">
		<span class="col-sm-2">Thời gian</span>
		<div class="col-sm-10">
			<div class="row g-3">
				<div class="col">
					<label asp-for="StartDateTime" class="form-label">Bắt đầu</label>
					<input asp-for="StartDateTime" class="form-control" />
					<span asp-validation-for="StartDateTime" class="text-danger"></span>
				</div>
				<div class="col">
					<label asp-for="EndDateTime" class="form-label">Kết thúc</label>
					<input asp-for="EndDateTime" class="form-control" />
					<span asp-validation-for="EndDateTime" class="text-danger"></span>
				</div>
			</div>
		</div>
	</div>

	<div div class="mb-3">
		<table id="ProductTable" class="table table-borderless">
			<thead>
				<tr>
					<th>Tên vật phẩm</th>
					<th>Giá khởi điểm</th>
					<th>Giá bán ngay</th>
					<th>Bước giá tối thiểu</th>
					<th style="width:100px" class="text-center">
						<button id="btnAddProductRow" type="button" class="btn btn-sm btn-warning" onclick="AddProduct(this)">Thêm</button>
					</th>
				</tr>
			</thead>
			<tbody>
				@for (int i = 0; i < Model.Auctions!.Count; i++)
				{
					<tr>
						<td>
							<select asp-for="@Model.Auctions[i].ProductId" class="form-control" asp-items="@ViewBag.ProductList"></select>
						</td>
						<td>
							<input asp-for="@Model.Auctions[i].StartingPrice" class="form-control" />
							<span asp-validation-for="@Model.Auctions[i].StartingPrice" class="text-danger"></span>
						</td>
						<td>
							<input asp-for="@Model.Auctions[i].InstantSellPrice" class="form-control" />
							<span asp-validation-for="@Model.Auctions[i].InstantSellPrice" class="text-danger"></span>
						</td>
						<td>
							<input asp-for="@Model.Auctions[i].MinimumPriceIncrement" class="form-control" />
							<span asp-validation-for="@Model.Auctions[i].MinimumPriceIncrement" class="text-danger"></span>
						</td>
						<td style="width:100px" class="text-center">
							<button id="btnRemove-@i" type="button" class="btn btn-sm btn-danger" onclick="DeleteProduct(this)">Xóa</button>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>

	<input hidden asp-for="SalesMethodId" value="@ViewBag.SalesMethod" />

	<div class="d-flex justify-content-end">
		<div>
			<button type="submit" class="btn btn-primary">Tạo chiến dịch</button>
			<a asp-controller="Campaign" asp-action="Index" class="btn btn-secondary">Trở về</a>
		</div>
	</div>
</form>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script>
		function AddProduct(btn) {
			var table = document.getElementById('ProductTable');
			var rows = table.getElementsByTagName('tr');
			var rowOuterHtml = rows[rows.length - 1].outerHTML;

			var lastrowIdx = rows.length - 2;

			var nextrowIdx = eval(lastrowIdx) + 1;

			rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowIdx + '_', '_' + nextrowIdx + '_');
			rowOuterHtml = rowOuterHtml.replaceAll('[' + lastrowIdx + ']', '[' + nextrowIdx + ']');
			rowOuterHtml = rowOuterHtml.replaceAll('-' + lastrowIdx, '-' + nextrowIdx);

			var newRow = table.insertRow();
			newRow.innerHTML = rowOuterHtml;

			var x = document.getElementsByTagName('input');

			for (var cnt = 0; cnt < x.length; cnt++) {
				if (x[cnt].type == "text" && x[cnt].id.indexOf('_' + nextrowIdx + '_') > 0)
					x[cnt].value = "0";
				else if (x[cnt].type == "number" && x[cnt].id.indexOf('_' + nextrowIdx + '_') > 0)
					x[cnt].value = 0;
			}

			rebindvalidators();
		}

		function DeleteProduct(btn) {
			var table = document.getElementById('ProductTable');
			var tbody = table.getElementsByTagName('tbody')[0];

			if (tbody.rows.length == 1)
				return;

			$(btn).closest('tr').remove();

			var rows = tbody.getElementsByTagName('tr');

			for (var i = 0; i < rows.length; i++) {
				var elements = rows[i].querySelectorAll('input, select');

				for (var j = 0; j < elements.length; j++) {
					elements[j].id = elements[j].id.replace(/\d+/, i);
					elements[j].name = elements[j].name.replace(/\[\d+\]/, "[" + i + "]");
				}

				var btn = rows[i].querySelector("button");
				if (btn) {
					btn.id = "btnRemove-" + i;
				}
			}
		}

		function rebindvalidators() {
			var $form = $("#ProductForm");

			$form.unbind();

			$form.data("validator", null);

			$.validator.unobtrusive.parse($form);

			$form.validate($form.data("unobtrusiveValidation").options);
		}

	</script>
}